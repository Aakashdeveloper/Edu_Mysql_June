///////
SP
//////


create user bookinguser@localhost identified by 'passsword';

delimiter $$
create  definer=bookinguser@localhost procedure EduProc()
sql security definer
begin
select * from rooms;
end$$

delimiter ;

drop procedure EduProc;


call EduProc();

show databases;

select * from mysql.proc;


DELIMITER $$
CREATE DEFINER=`bookinguser`@`localhost` PROCEDURE `EduProc`()
begin
select * from rooms;
end$$
DELIMITER ;


Delimiter $$
Create procedure showFilms(in length_m int, in pid int)
begin
select * from films where  length_min>length_m and id=pid;
end$$

delimiter ;

drop procedure showFilms;

call showFilms(150,2);

select name, length_min into @thename, @thelength from films where id=2;

select @thename, @thelength;

Delimiter $$
Create procedure showFilms(in thename varchar(250))
begin
select * from films where  name = thename;
end$$

delimiter ;

drop procedure showFilms;

call showFilms(@thename);


Delimiter $$
Create procedure showFilms(in theId int, out outId int, out outName varchar(250))
begin
select  id, name into outId,outName from films where id = theId;
end$$

delimiter ;

call showFilms(3, @id, @name);

select @id, @name;



/////
Triggers
//////
CREATE DATABASE test;
USE test;

create table sales(
id INT PRIMARY KEY,
product varchar(30) not null,
value numeric(10.2)
);

create table sales_update(
	id INT PRIMARY KEY AUTO_INCREMENT,
    product_id int not null,
    change_at timestamp,
    before_value numeric(10.2) not null,
    after_value numeric(10.2) not null
);

insert into sales (id, product,value) values (2,"Bat",1.20);

select * from sales;
update sales set value = 5 where id =3;

delimiter $$
create trigger before_sales_update before update on sales for each row
begin
  insert into sales_update (product_id,change_at,before_value,after_value)
    values (old.id, now(), old.value, new.value);
end$$

delimiter ;

select * from sales_update;

///////
create index nameIndex on customers(first_name);
drop index nameIndex on customers;

select table_id from information_schema.innodb_sys_tables where name='cinema_booking_system/customers';

 SHOW INDEXES FROM customers;